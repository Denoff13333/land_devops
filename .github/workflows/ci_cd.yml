name: ci_cd.yml

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, ready_for_review, closed ]

permissions:
  contents: write
  pull-requests: write
  actions: read
  packages: write

env:
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  DOCKERHUB_REPO: ${{ vars.DOCKERHUB_REPO }}

jobs:
  info:
    if: github.event.action != 'closed'
    name: (INF) Print INFORMATION
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "PR #${{ github.event.number }}"
          echo "From: ${{ github.head_ref }}"
          echo "To  : ${{ github.base_ref }}"

  gates:
    if: github.event.action != 'closed'
    name: (ISC) / collect statuses
    runs-on: ubuntu-latest
    needs: [ info ]
    steps:
      - name: Wait tests & security
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          running-workflow-name: ci_cd.yml
          check-regexp: '^\((TST|SEC)\)'
          allowed-conclusions: success
          ref: ${{ github.event.pull_request.head.sha }}

  version:
    if: github.event.action != 'closed'
    name: (VER) Version UP
    runs-on: ubuntu-latest
    needs: [ gates ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Decide bump type
        id: decide
        run: |
          BR="${{ github.head_ref }}"
          if [[ "$BR" == hotfix/* ]]; then echo "type=patch" >> $GITHUB_OUTPUT; else echo "type=minor" >> $GITHUB_OUTPUT; fi

      - name: Bump version
        id: bump
        run: bash .github/scripts/version.sh "${{ steps.decide.outputs.type }}"

      - name: Commit version file
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add version.txt
          git commit -m "chore: bump version to $(cat version.txt)" || echo "No changes"
          git push origin HEAD:${{ github.head_ref }}

  changelog:
    if: github.event.action != 'closed'
    name: (VER) Changelog UP
    runs-on: ubuntu-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Prepare changelog
        run: |
          PR=${{ github.event.number }}
          BR=${{ github.head_ref }}
          VER=$(cat version.txt)
          bash .github/scripts/changelog.sh "$VER" "$BR" "$PR"
      - name: Commit changelog
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "docs: update changelog for v$(cat version.txt)" || echo "No changes"
          git push origin HEAD:${{ github.head_ref }}

  build:
    if: github.event.action != 'closed'
    name: (BUILD) / build
    runs-on: ubuntu-latest
    needs: [ changelog ]
    steps:
      - uses: actions/checkout@v4
      - name: Read version
        id: ver
        run: echo "val=$(cat version.txt)" >> "$GITHUB_OUTPUT"
      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:v${{ steps.ver.outputs.val }}

  notify:
    if: github.event.action != 'closed'
    name: (TG) Notify final
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4
      - name: Telegram notify
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          VER=$(cat version.txt)
          bash .github/scripts/notify_telegram.sh "${{ github.event.repository.name }}" "$VER" "${{ github.event.number }}" "${{ env.DOCKERHUB_REPO }}"

  deploy:
    if: false  
    name: Deploy / PROD
    runs-on: self-hosted
    needs: [ notify ]
    environment: prod
    steps:
      - uses: actions/checkout@v4
      - name: Run container
        run: |
          VER=$(cat version.txt)
          bash .github/scripts/deploy.sh "${{ env.DOCKERHUB_REPO }}:v${VER}"

  release:
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    name: Deploy / create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create tag & release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v$(cat version.txt)
          name: Релиз v$(cat version.txt)
          body_path: CHANGELOG.md
